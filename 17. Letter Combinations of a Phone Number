class Solution(object):
    def letterCombinations(self, digits):
        """
        :type digits: str
        :rtype: List[str]
        """
        if digits == '':
            return []
        dic = {'2':'abc', '3':'def', '4':'ghi', '5':'jkl', '6':'mno', '7':'pqrs', '8':'tuv', '9':'wxyz'}
        lst = map(lambda x:dic[x], list(digits))
        res = []
        self.helper(res, lst, 0, '')
        return res
        
    def helper(self, res, lst, idx, s):
        if idx == len(lst):
            res.append(s)
            return
        curr = lst[idx]
        for c in curr:
            self.helper(res, lst, idx + 1, s + c)
