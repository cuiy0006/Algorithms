class Solution(object):
    def longestPalindrome(self, s):
        """
        :type s: str
        :rtype: str
        """
        def helper(left, right):
            while left >= 0 and right <= len(s)-1:
                if s[left] == s[right]:
                    if left == 0 or right == len(s) -1:
                        return (left, right)
                    else:
                        left -= 1
                        right += 1
                else:
                    return (left + 1, right -1)
        
        start, end = 0,0
        for i in range(len(s)):
            left, right = helper(i, i)
            if right - left > end - start:
                end, start = right, left
            if i < len(s)-1:
                left, right = helper(i, i+1)
                if right - left > end - start:
                    end, start = right, left
        return s[start:end+1]
