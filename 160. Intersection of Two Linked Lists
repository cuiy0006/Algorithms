# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def getIntersectionNode(self, headA, headB):
        """
        :type head1, head1: ListNode
        :rtype: ListNode
        """
        node1 = headA
        node2 = headB
        while node1 != None and node2 != None:
            node1 = node1.next
            node2 = node2.next
        node3 = headA
        node4 = headB
        while node1 != None:
            node1 = node1.next
            node3 = node3.next
        while node2 != None:
            node2 = node2.next
            node4 = node4.next
        while node3 != node4:
            node3 = node3.next
            node4 = node4.next
        return node3
