# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        node1 = l1
        node2 = l2
        head =  ListNode(0)
        node = head
        step = 0
        while node1 != None or node2 != None:
            add1 = 0
            add2 = 0
            if node1 != None:
                add1 = node1.val
                node1 = node1.next
            if node2 != None:
                add2 = node2.val
                node2 = node2.next
            total = add1 + add2 + step
            if total >= 10:
                step = 1
                total = total - 10
            else:
                step = 0
            node.next = ListNode(total)
            node = node.next
        if step == 1:
            node.next = ListNode(1)
        return head.next
