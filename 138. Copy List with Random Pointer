# Definition for singly-linked list with a random pointer.
# class RandomListNode(object):
#     def __init__(self, x):
#         self.label = x
#         self.next = None
#         self.random = None

class Solution(object):
    def copyRandomList(self, head):
        """
        :type head: RandomListNode
        :rtype: RandomListNode
        """
        dic = {None:None}
        first = head
        new = RandomListNode(0)
        second = new
        while first != None:
            second.next = RandomListNode(first.label)
            second = second.next
            dic[first] = second
            first = first.next
        first = head
        second = new.next
        while first != None:
            second.random = dic[first.random]
            first = first.next
            second = second.next
        return new.next
