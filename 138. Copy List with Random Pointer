# Definition for singly-linked list with a random pointer.
# class RandomListNode(object):
#     def __init__(self, x):
#         self.label = x
#         self.next = None
#         self.random = None

class Solution(object):
    def copyRandomList(self, head):
        """
        :type head: RandomListNode
        :rtype: RandomListNode
        """
        dic = {}
        res_dic = {}
        node = head
        res = RandomListNode(0)
        res_node = res
        i = 0
        while node != None:
            res_node.next = RandomListNode(node.label)
            dic[node] = i
            res_dic[i] = res_node.next
            res_node = res_node.next
            i += 1
            node = node.next
        
        node = head
        res_node = res.next
        while node != None:
            if node.random == None:
                res_node.random = None
            else:
                idx = dic[node.random]
                res_node.random = res_dic[idx]
            node = node.next
            res_node = res_node.next
        return res.next
