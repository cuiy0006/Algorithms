# Definition for singly-linked list with a random pointer.
# class RandomListNode(object):
#     def __init__(self, x):
#         self.label = x
#         self.next = None
#         self.random = None

class Solution(object):
    def copyRandomList(self, head):
        """
        :type head: RandomListNode
        :rtype: RandomListNode
        """
        dic = {}
        node = head
        new = tmp = RandomListNode(0)
        while node != None:
            tmp.next = dic[node] = RandomListNode(node.label)
            tmp, node = tmp.next, node.next
        node = head
        tmp = new.next
        while node != None:
            if node.random == None:
                tmp.random = None
            else:
                tmp.random = dic[node.random]
            tmp, node = tmp.next, node.next
        return new.next
