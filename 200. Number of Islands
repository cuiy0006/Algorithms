class Solution(object):
    def numIslands(self, grid):
        """
        :type grid: List[List[str]]
        :rtype: int
        """
        cnt = 0
        lst = [[0 for j in range(len(grid[i]))] for i in range(len(grid))]
        for i in range(len(grid)):
            for j in range(len(grid[i])):
                if grid[i][j] == '1' and lst[i][j] == 0:
                    cnt += 1
                    self.helper(grid, lst, cnt, i, j)
        return cnt
                    
                    
    def helper(self, grid, lst, cnt, x, y):
        m = len(grid)
        n = len(grid[0])
        if x < 0 or y < 0 or x >= m or y >= n:
            return
        if lst[x][y] != 0 or grid[x][y] != '1':
            return
        
        lst[x][y] = cnt
        self.helper(grid, lst, cnt, x + 1, y)
        self.helper(grid, lst, cnt, x - 1, y)
        self.helper(grid, lst, cnt, x, y + 1)
        self.helper(grid, lst, cnt, x, y - 1)
