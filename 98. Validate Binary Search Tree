# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def isValidBST(self, root):
        """
        :type root: TreeNode
        :rtype: bool
        """
        inorder = []
        s = []
        node = root
        while len(s) != 0 or node != None:
            if len(s) != 0:
                node = s.pop()
                inorder.append(node.val)
                node = node.right
            while node != None:
                s.append(node)
                node = node.left
        for i in range(len(inorder)-1):
            if inorder[i] >= inorder[i + 1]:
                return False
        return True
                
